[AnafiPiloting]
	Wrapper for the Parrot Olympe flight control methods
	
	...
	
	Attributes
	----------
	drone : olympe.Drone
		the drone object
		
	Methods
	-------
	takeoff()
		initiates drone takeoff
	land()
		initiates drone landing
	move_by(x, y, z, angle, wait)
		moves the drone a given number of meters or rotates it to a set angle
	move_to(lat, lon, alt, orientation_mode, heading, wait)
		moves the drone to given waypoint or rotates it to a set angle from north
	cancel_move_by()
		cancels move_by order
	cancel_move_to
		cancels move_to order
	
	[__init__(drone_object)]
		Parameters
		----------
		drone_object : olympe.Drone
			the drone object
	
	[takeoff()]
		initiates drone takeoff
	
	[land()]
		initiates drone landing
		
	[move_by(x, y, z, angle, wait)]
		moves the drone a given number of meters or rotates it to a set angle
		
		Parameters
		----------
		x : float
			the movement in the x axis, forwards and backwards, in meters
		y : float
			the movement in the y axis, left and right, in meters
		z : float
			the movement in the z axis, up and down, in meters
		angle : float
			the rotation in radians
		wait : bool, optional
			if true waits for completion before sending the next instruction (default = False)
			
	[move_to(lat, lon, alt, orientation_mode, heading, wait)]
		moves the drone to given waypoint or rotates it to a set angle from north
		
		Parameters
		----------
		lat : float
			the latitude to travel to
		lon : float
			the longitude to travel to
		alt : float
			the altitude to travel to
		orientation_mode : str, optional
			the orientation mode (default = "NONE")
			- "NONE"
			- "TO_TARGET" (looks at the direction of the given location)
			- "HEADING_START" (Changes orientation before travelling)
			- "HEADING_DURING" (Changes orientation during travel)
		heading : float, optional
			the target orientation dictated by degrees from north (default = 0)
			only used if orientation_mode is "HEADING_START" or "HEADING_DURING"
		wait : bool, optional
			if true waits for completion before sending the next instruction (default = False)
	
	[cancel_move_by()]
		cancels move_by order
		
	[cance_move_to()]
		cancels move_to order
